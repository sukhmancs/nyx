name: Prelude

on:
  workflow_call:
    inputs:
      command:
        required: false
        type: string
      platform:
        default: "ubuntu"
        required: false
        type: string
      optimize-space:
        default: true
        required: false
        type: boolean
    secrets:
      GH_TOKEN:
        required: true

jobs:
  nix:
    runs-on: "${{ inputs.platform }}-latest"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GH_TOKEN }}"

      - name: "Set up QEMU support"
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -q -y
          sudo apt-get install -q -y binfmt-support qemu-efi qemu-system-aarch64 qemu-user-static

      - name: "Install nix"
        uses: cachix/install-nix-action@master
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            # Extra experimental features. fetch-tree is required internally
            experimental-features = nix-command flakes fetch-tree
            allow-import-from-derivation = false
            extra-platforms = aarch64-linux

            # extra substituters
            # my own package set
            extra-substituters = https://nyx.cachix.org
            extra-trusted-public-keys = nyx.cachix.org-1:xH6G0MO9PrpeGe7mHBtj1WbNzmnXr7jId2mCiq6hipE=

            # nix-community
            extra-substituters = https://nix-community.cachix.org
            extra-trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - name: "Nix Magic Cache"
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: "Maximize build space"
        if: ${{ inputs.optimize-space }}
        uses: easimon/maximize-build-space@v10
        with:
          overprovision-lvm: true
          remove-android: true
          remove-dotnet: true
          remove-haskell: true
          remove-codeql: true

      - name: "Run Input: ${{ inputs.command }}"
        run: "${{ inputs.command }}"
